body{
    margin: 0;
    padding: 0;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

h1{
    margin-top: 0;
}

.navbar, .rules{
    background-color: red;
    color: white;
    margin-bottom: 3px;
    box-shadow: 0 3px 6px #999, 0 3px 6px #999;
}

.rules{
    background: linear-gradient(45deg, #e84747, #890dba);
}

.heroesContainer{
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 3rem;
    padding: 2rem;
}

.heroCard{
    border: 3ps solid grey;
    border-radius: 3px;
    box-shadow: 0 3px 6px #999, 0 3px 6px #999;
    text-align: center;
    cursor: pointer;
    transition: all 0.2s;
}

.heroCard:hover{
    scale: 1.03;
    box-shadow: 0 12px 24px #999, 0 12 px 24 px #999;
}

.heroCard img{
    width: 100%;
    height: 80%;
}

.heroName{
    font-weight: 700; 
}


/* // import "./Card.css";
// import {useState, useEffect} from 'react';
// const data = require('./data.json');


// const Card = props => {
//     const [characters, setCharacters] = useState([]);
//     const [score, setScore] = useState(0);
//     const [bestScore, setBestScore] = useState(0);
//     const [checked, setChecked] = useState([]);

//     useEffect(() => {
//         setCharacters(data);
//         shuffle()
//     },[])

//     function shuffle() {
//         const shuffled = [...characters]
//         let currentIndex = shuffled.length, randomIndex;

//         while (currentIndex !== 0) {
//             randomIndex = Math.floor(Math.random() * currentIndex);
//             currentIndex--;
//             [shuffled[currentIndex], shuffled[randomIndex]] = [
//                 shuffled[randomIndex], shuffled[currentIndex]];
//         }
//         setCharacters(shuffled);
//         console.log(characters);
//     }

//     const scoring = (itemName) => {
//         setScore(score + 1);
//         const updatedChecked = [...checked, itemName];
//         setChecked(updatedChecked);
//         const count = updatedChecked.filter((x) => x === itemName).length;
//         console.log(updatedChecked);
//         console.log(count);
//         if (count > 1) {
//             setChecked([])
//             setScore(0)
//             if (score > bestScore) {
//                 setBestScore(score);
//             }
//         if (score === 12) {
//             alert('you win!!!')
//             setChecked([])
//             setScore(0)
//             if (score > bestScore) {
//                 setBestScore(score);
//             }
//         }
//         }
//     };

//     const handleClick = (itemName) => {
//         shuffle()
//         scoring(itemName)
//     }

//     const containerStyle = {
//         display: 'flex',
//         flexWrap: 'wrap',
//         gap: '0.5rem',
//         alignItems: 'center',
//         justifyContent: 'center',
//         width: '70vw'
//     }

//     return (
//         <div>
//             <div className='score'>
//                 <h2>score: {score}</h2>
//                 <h2>Best Score: {bestScore}</h2>
//             </div>
//             <div className='game-container'
//             style={containerStyle}
//             >
//                 {
//                     characters.map((item, i) => {
//                         return (
//                             <div className='heroBox' key={i} onClick={() => handleClick(item.name)}>
//                                 <img src={item.image} alt={item.name} style={{width: '100%', height: '80%'}} />
//                                 <p style={{fontSize: '1rem' }}>{item.name}</p>
//                             </div>
//                         )
//                     })
//                 }
//             </div>
//         </div>

//     )
// }

// export default Card */






/* .heroBox{
    height: 25rem;
    width: 12.5rem;
}

.score{
    display: flex;
    gap: 1rem;
    justify-content: space-evenly;
}

.game-container{
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    align-items: center;
    justify-content: center;
    width: 70vw;
} */